name: Build Toolchain on msys2
on: 
  push:

jobs:
  msys2-ucrt64:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain_profile:
          # - '9.3.0-legacy'
          # - '9.5.0-winxp'
          # - '10.5.0'
          # - '11.4.0'
          # - '12.3.0'
          - 'stable'
          # - '13.3.0' 
          # - '14.1.0'
          # - '13.3.1-dev'
          # - '14.1.1-dev'
          # - '15.0.0-dev' 
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
        with: 
          path: kos
      
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            git 
            base-devel 
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-libpng 
            mingw-w64-ucrt-x86_64-libjpeg 
            mingw-w64-ucrt-x86_64-libelf

      - name: Build Toolchain
        shell: msys2 {0}
        run: |
          TMP_DIR=$(pwd)
          cd kos/utils/dc-chain
          nproc
          make makejobs=$(nproc) toolchain_profile=${{ matrix.toolchain_profile }} gnu_mirror=mirrors.kernel.org verbose=1 sh_toolchain_path=$TMP_DIR/sh-elf arm_toolchain_path=$TMP_DIR/arm-eabi

      - name: Upload Example Results
        uses: actions/upload-artifact@v4
        with:
          name: toolchain-kos-sh4-${{ matrix.toolchain_profile }}
          path: |
            ${{ github.workspace }}/sh-elf
          retention-days: 1

      - name: Build KOS
        shell: msys2 {0}
        run: |
          START_DIR=$(pwd)
          export KOS_ARCH="dreamcast"
          export KOS_SUBARCH="pristine"
          export KOS_BASE="$START_DIR/kos"
          export KOS_PORTS="$START_DIR/kos-ports"
          export KOS_CC_BASE="$START_DIR/sh-elf"
          export KOS_CC_PREFIX="sh-elf"
          export DC_ARM_BASE="$START_DIR/arm-eabi"
          export DC_ARM_PREFIX="arm-eabi"
          export DC_TOOLS_BASE="$START_DIR/bin"
          export KOS_CMAKE_TOOLCHAIN="${KOS_BASE}/utils/cmake/dreamcast.toolchain.cmake"
          export KOS_GENROMFS="${KOS_BASE}/utils/genromfs/genromfs"
          export KOS_MAKE="make"
          export KOS_LOADER="dc-tool -x"
          export KOS_INC_PATHS=""
          export KOS_CFLAGS=""
          export KOS_CPPFLAGS=""
          export KOS_LDFLAGS=""
          export KOS_AFLAGS=""
          export DC_ARM_LDFLAGS=""
          export KOS_CFLAGS="${KOS_CFLAGS} -O2"
          export KOS_CFLAGS="${KOS_CFLAGS} -fomit-frame-pointer"
          export KOS_CFLAGS="${KOS_CFLAGS} -fno-builtin"
          export KOS_SH4_PRECISION="-m4-single-only"
          
          echo $KOS_BASE

          cd kos
          source environ_base.sh
          make -j$(nproc)
      
      - uses: actions/checkout@v4
        with: 
          repository: KallistiOS/kos-ports
          path: ports

